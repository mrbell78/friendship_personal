package ngo.friendship.satellite.ui;

import android.app.AlertDialog;
import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.text.Html;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.TextView;

import ngo.friendship.satellite.App;
import ngo.friendship.satellite.LanguageContextWrapper;
import ngo.friendship.satellite.R;
import ngo.friendship.satellite.base.BaseActivity;
import ngo.friendship.satellite.constants.KEY;
import ngo.friendship.satellite.model.AppSettings;
import ngo.friendship.satellite.model.NotificationItem;
import ngo.friendship.satellite.service.ManualSyncService;
import ngo.friendship.satellite.utility.AppPreference;

// TODO: Auto-generated Javadoc

/**
 * The Class NotificationShowActivity.
 */
public class NotificationShowActivity extends BaseActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);

		App.loadApplicationData(this);
		Bundle b = getIntent().getExtras();
		int notifId = b.getInt("NOTIF_ID");

		NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
		mNotificationManager.cancel(notifId);
		if (ManualSyncService.notificationItemList != null && ManualSyncService.notificationItemList.size() > 0) {
			showNotifItem();
		} else {
			this.finish();
		}
	}

	/**
	 * Display activity exit prompt dialog.
	 */
	private void showNotifItem()
	{
		AlertDialog.Builder builder = new AlertDialog.Builder(this);

		View view = View.inflate(this, R.layout.notification_dialog_layout, null);
		builder.setView(view);

		TextView tvDialogTitle = view.findViewById(R.id.tv_dialog_title);
		tvDialogTitle.setText(R.string.dialog_title);
		tvDialogTitle.setTextColor(Color.BLACK);

		ImageView imgIcon = view.findViewById(R.id.img_dialog_title);
		imgIcon.setImageResource(R.drawable.warning);

		/*
		 * Display notification item in a list
		 */
		LinearLayout llRowContainer = view.findViewById(R.id.ll_row_container);
		String prevType = null;

		for(NotificationItem item : ManualSyncService.notificationItemList)
		{
			/*
			 * Check if different type found. If so then display the type in title
			 */
			Log.e("NOTIFICATION SHOW", item+"");
			if(prevType == null || !prevType.equalsIgnoreCase(item.getNotificationType()))
			{
				prevType = item.getNotificationType();
				
				TextView tv = new TextView(NotificationShowActivity.this);
				tv.setTextSize(20);
				tv.setBackgroundColor(Color.rgb(200, 200, 200));

				LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
				tv.setLayoutParams(params);
				tv.setPadding(5, 5, 5, 5);
				tv.setTextColor(Color.BLACK);
				llRowContainer.addView(tv);
				tv.setText(item.getNotificationType());
			}
			
			/*
			 * Add item row with data.
			 */
			View rowView = View.inflate(this, R.layout.notification_dialog_row, null);
			TextView tvTitle = rowView.findViewById(R.id.tv_title);
			tvTitle.setText(Html.fromHtml(item.getTitle()));

			TextView tvDate = rowView.findViewById(R.id.tv_date);
			if(item.getDate() != null && !item.getDate().equalsIgnoreCase(""))
			{
				tvDate.setVisibility(View.VISIBLE);
				tvDate.setText(item.getDate());
			}
			else
			{
				tvDate.setVisibility(View.GONE);
			}
			llRowContainer.addView(rowView);
		}

		
		final AlertDialog dialog = builder.create();
		builder.setCancelable(false);


		Button btnYes = view.findViewById(R.id.btn_ok);
		btnYes.setText(R.string.btn_yes);
		btnYes.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				dialog.dismiss();
				if(!App.getContext().isActivityRunning())
				{
					startActivity(new Intent(NotificationShowActivity.this, LauncherActivity.class));
				}

				NotificationShowActivity.this.finish();

			}
		});

		Button btnNo = view.findViewById(R.id.btn_close);
		btnNo.setText(R.string.btn_close);
		btnNo.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				dialog.dismiss();
				NotificationShowActivity.this.finish();
			}
		});

		dialog.setCancelable(false);
		dialog.show();
	}

	@Override
	public void onStart() {
		super.onStart();
		App.getContext().onStartActivity(this);
	}

	@Override
	public void onStop() {
		super.onStop();
		App.getContext().onStartActivity(this);
	}

	@Override
	protected void attachBaseContext(Context context) {
		super.attachBaseContext(LanguageContextWrapper.wrap(context, AppPreference.getString(context, KEY.LANGUAGE, AppSettings.DEFAULT_LANGUAGE)));
	}

}
